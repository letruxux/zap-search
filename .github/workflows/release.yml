name: Create Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers workflow when a new tag is pushed (e.g., v1.0.0)

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Bun
        run: |
          curl https://bun.sh/install | bash
          export PATH="$HOME/.bun/bin:$PATH"

      - name: Install dependencies
        run: bun install

      - name: Build for Linux
        run: |
          bun build . --compile --target=bun-linux-x64 --outfile ./server

      - name: Upload Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: server-linux
          path: ./server

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Bun
        run: |
          curl https://bun.sh/install | bash
          $env:PATH += ";$HOME/.bun/bin"

      - name: Install dependencies
        run: bun install

      - name: Build for Windows
        run: |
          bun build . --compile --target=bun-windows-x64 --outfile ./server.exe

      - name: Upload Windows binary
        uses: actions/upload-artifact@v3
        with:
          name: server-windows
          path: ./server.exe

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Linux binary
        uses: actions/download-artifact@v3
        with:
          name: server-linux
          path: ./dist

      - name: Download Windows binary
        uses: actions/download-artifact@v3
        with:
          name: server-windows
          path: ./dist

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux binary to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/server
          asset_name: server-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows binary to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/server.exe
          asset_name: server-windows.exe
          asset_content_type: application/octet-stream
